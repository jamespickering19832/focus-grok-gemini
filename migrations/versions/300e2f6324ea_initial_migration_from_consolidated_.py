"""Initial migration from consolidated models

Revision ID: 300e2f6324ea
Revises: 
Create Date: 2025-09-03 16:37:21.511220

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '300e2f6324ea'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('address', sa.String(length=256), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('logo', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('expense_category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('landlord',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('address_line_1', sa.String(length=128), nullable=True),
    sa.Column('town', sa.String(length=128), nullable=True),
    sa.Column('postcode', sa.String(length=20), nullable=True),
    sa.Column('bank_name', sa.String(length=128), nullable=True),
    sa.Column('bank_account_number', sa.String(length=30), nullable=True),
    sa.Column('bank_sort_code', sa.String(length=10), nullable=True),
    sa.Column('reference_code', sa.String(length=64), nullable=True),
    sa.Column('commission_rate', sa.Float(), nullable=True),
    sa.Column('receives_email_statements', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('landlord', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_landlord_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_landlord_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_landlord_reference_code'), ['reference_code'], unique=True)

    op.create_table('rent_charge_batch',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.LargeBinary(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('landlord_reference',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reference_code', sa.String(length=64), nullable=True),
    sa.Column('landlord_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['landlord_id'], ['landlord.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('landlord_reference', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_landlord_reference_reference_code'), ['reference_code'], unique=True)

    op.create_table('property',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address_line_1', sa.String(length=128), nullable=True),
    sa.Column('town', sa.String(length=128), nullable=True),
    sa.Column('postcode', sa.String(length=20), nullable=True),
    sa.Column('rent_amount', sa.Float(), nullable=True),
    sa.Column('landlord_id', sa.Integer(), nullable=True),
    sa.Column('landlord_portion', sa.Float(), nullable=True),
    sa.Column('utility_account_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['landlord_id'], ['landlord.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['role.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('expense',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['expense_category.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tenant',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=True),
    sa.Column('reference_code', sa.String(length=64), nullable=True),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('tenant', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_tenant_email'), ['email'], unique=False)
        batch_op.create_index(batch_op.f('ix_tenant_name'), ['name'], unique=False)
        batch_op.create_index(batch_op.f('ix_tenant_reference_code'), ['reference_code'], unique=True)

    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=True),
    sa.Column('type', sa.String(length=64), nullable=True),
    sa.Column('balance', sa.Float(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('landlord_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['landlord_id'], ['landlord.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('statement',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=64), nullable=True),
    sa.Column('date_generated', sa.DateTime(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('landlord_id', sa.Integer(), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('pdf_path', sa.String(length=256), nullable=True),
    sa.Column('delivered', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['landlord_id'], ['landlord.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('description', sa.String(length=256), nullable=True),
    sa.Column('reference_code', sa.String(length=128), nullable=True),
    sa.Column('status', sa.String(length=64), nullable=True),
    sa.Column('category', sa.String(length=64), nullable=True),
    sa.Column('tenant_id', sa.Integer(), nullable=True),
    sa.Column('landlord_id', sa.Integer(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('rent_charge_batch_id', sa.Integer(), nullable=True),
    sa.Column('processed', sa.Boolean(), nullable=False),
    sa.Column('is_bulk', sa.Boolean(), nullable=False),
    sa.Column('parent_transaction_id', sa.Integer(), nullable=True),
    sa.Column('property_id', sa.Integer(), nullable=True),
    sa.Column('reviewed', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['landlord_id'], ['landlord.id'], ),
    sa.ForeignKeyConstraint(['parent_transaction_id'], ['transaction.id'], ),
    sa.ForeignKeyConstraint(['property_id'], ['property.id'], ),
    sa.ForeignKeyConstraint(['rent_charge_batch_id'], ['rent_charge_batch.id'], ),
    sa.ForeignKeyConstraint(['tenant_id'], ['tenant.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('allocation_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_id', sa.Integer(), nullable=True),
    sa.Column('allocated_to', sa.String(length=128), nullable=True),
    sa.Column('allocated_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(length=256), nullable=True),
    sa.ForeignKeyConstraint(['transaction_id'], ['transaction.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('allocation_history')
    op.drop_table('transaction')
    op.drop_table('statement')
    op.drop_table('account')
    with op.batch_alter_table('tenant', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_tenant_reference_code'))
        batch_op.drop_index(batch_op.f('ix_tenant_name'))
        batch_op.drop_index(batch_op.f('ix_tenant_email'))

    op.drop_table('tenant')
    op.drop_table('expense')
    op.drop_table('user_roles')
    op.drop_table('property')
    with op.batch_alter_table('landlord_reference', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_landlord_reference_reference_code'))

    op.drop_table('landlord_reference')
    op.drop_table('user')
    op.drop_table('role')
    op.drop_table('rent_charge_batch')
    with op.batch_alter_table('landlord', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_landlord_reference_code'))
        batch_op.drop_index(batch_op.f('ix_landlord_name'))
        batch_op.drop_index(batch_op.f('ix_landlord_email'))

    op.drop_table('landlord')
    op.drop_table('expense_category')
    op.drop_table('company')
    # ### end Alembic commands ###